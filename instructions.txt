
CREATE OR REPLACE VIEW COST_USAGE_TRAIN_V AS
SELECT
  ROWNUM AS ID_COLUMN,
  UsageQuantity,
  EffectiveCost,
  REGION,
  RESOURCETYPE,
  OCI_COMPARTMENTID,
  OCI_COMPARTMENTNAME,
  CHARGEDESCRIPTION
FROM OCI_COST_DATA
WHERE ChargePeriodStart BETWEEN TRUNC(SYSDATE) - 110 AND TRUNC(SYSDATE) - 30;



CREATE OR REPLACE VIEW COST_USAGE_SCORE_V AS
SELECT
  ROWNUM AS ID_COLUMN,
  UsageQuantity,
  EffectiveCost,
  REGION,
  RESOURCETYPE,
  OCI_COMPARTMENTID,
  OCI_COMPARTMENTNAME,
  CHARGEDESCRIPTION,
  ChargePeriodStart AS USAGE_DATE,
  RESOURCEID
FROM OCI_COST_DATA
WHERE ChargePeriodStart > TRUNC(SYSDATE) - 30;



BEGIN
  DBMS_DATA_MINING.DROP_MODEL('COST_ANOMALY_MODEL');
END;
/

DECLARE
  v_setlst DBMS_DATA_MINING.SETTING_LIST;
BEGIN
  v_setlst('ALGO_NAME') := 'ALGO_EXPECTATION_MAXIMIZATION'; -- Unsupervised anomaly detection
  v_setlst('PREP_AUTO') := 'ON'; -- Auto-normalization, auto-encoding
  v_setlst('EMCS_OUTLIER_RATE') := '0.2'; -- 20% flagged as anomalies

  DBMS_DATA_MINING.CREATE_MODEL2(
    MODEL_NAME          => 'COST_ANOMALY_MODEL',
    MINING_FUNCTION     => 'CLASSIFICATION',
    DATA_QUERY          => 'SELECT * FROM COST_USAGE_TRAIN_V',
    CASE_ID_COLUMN_NAME => 'ID_COLUMN',
    SET_LIST            => v_setlst,
    TARGET_COLUMN_NAME  => NULL
  );
END;
/


SELECT model_name, mining_function, algorithm
FROM user_mining_models;
-------------------------------------

-------------------------------------
SELECT
  s.*,
  PREDICTION_PROBABILITY(COST_ANOMALY_MODEL USING *) AS anomaly_score
FROM
  COST_USAGE_SCORE_V s
WHERE
  PREDICTION(COST_ANOMALY_MODEL USING *) = '1'  -- '1' indicates anomaly
ORDER BY
  EFFECTIVECOST DESC;
-------------------------------------
SELECT
    REGION,
    OCI_COMPARTMENTNAME,
    CHARGEDESCRIPTION,
    NVL(SUM(CASE WHEN TO_CHAR(USAGE_DATE, 'YYYY-MM') = '2025-01' THEN EFFECTIVECOST END), 0) AS COST_JAN_2024,
    NVL(SUM(CASE WHEN TO_CHAR(USAGE_DATE, 'YYYY-MM') = '2025-02' THEN EFFECTIVECOST END), 0) AS COST_FEB_2024,
    MAX(PREDICTION_PROBABILITY(COST_ANOMALY_MODEL USING *)) AS MAX_ANOMALY_SCORE
FROM
    COST_USAGE_SCORE_V s
WHERE
    PREDICTION(COST_ANOMALY_MODEL USING *) = '1'
GROUP BY
    REGION,
    OCI_COMPARTMENTNAME,
    CHARGEDESCRIPTION
ORDER BY
    COST_FEB_2024 DESC;
-----------------------------------------
WITH ANOMALY_DATA AS (
    SELECT
        REGION,
        OCI_COMPARTMENTNAME,
        CHARGEDESCRIPTION,
        RESOURCEID,
        MAX(PREDICTION_PROBABILITY(COST_ANOMALY_MODEL USING *)) AS MAX_ANOMALY_SCORE
    FROM
        COST_USAGE_SCORE_V
    WHERE
        PREDICTION(COST_ANOMALY_MODEL USING *) = '1'
    GROUP BY
        REGION,
        OCI_COMPARTMENTNAME,
        CHARGEDESCRIPTION,
        RESOURCEID
),
COST_HISTORY AS (
    SELECT
        REGION,
        OCI_COMPARTMENTNAME,
        CHARGEDESCRIPTION,
        RESOURCEID,
        TO_CHAR(ChargePeriodStart, 'YYYY-MM') AS USAGE_MONTH,
        SUM(EffectiveCost) AS TOTAL_COST
    FROM
        OCI_COST_DATA
    WHERE
        ChargePeriodStart >= ADD_MONTHS(TRUNC(SYSDATE), -6)  -- Last 6 months
    GROUP BY
        REGION,
        OCI_COMPARTMENTNAME,
        CHARGEDESCRIPTION,
        RESOURCEID,
        TO_CHAR(ChargePeriodStart, 'YYYY-MM')
)
SELECT
    ch.REGION,
    ch.OCI_COMPARTMENTNAME,
    ch.CHARGEDESCRIPTION,
    ch.RESOURCEID,
    NVL(SUM(CASE WHEN ch.USAGE_MONTH = TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE), -5), 'YYYY-MM') THEN ch.TOTAL_COST END), 0) AS COST_MONTH_5,
    NVL(SUM(CASE WHEN ch.USAGE_MONTH = TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE), -4), 'YYYY-MM') THEN ch.TOTAL_COST END), 0) AS COST_MONTH_4,
    NVL(SUM(CASE WHEN ch.USAGE_MONTH = TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE), -3), 'YYYY-MM') THEN ch.TOTAL_COST END), 0) AS COST_MONTH_3,
    NVL(SUM(CASE WHEN ch.USAGE_MONTH = TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE), -2), 'YYYY-MM') THEN ch.TOTAL_COST END), 0) AS COST_MONTH_2,
    NVL(SUM(CASE WHEN ch.USAGE_MONTH = TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE), -1), 'YYYY-MM') THEN ch.TOTAL_COST END), 0) AS COST_MONTH_1,
    NVL(SUM(CASE WHEN ch.USAGE_MONTH = TO_CHAR(TRUNC(SYSDATE), 'YYYY-MM') THEN ch.TOTAL_COST END), 0) AS COST_MONTH_CURRENT,
    NVL(a.MAX_ANOMALY_SCORE, 0) AS MAX_ANOMALY_SCORE
FROM
    COST_HISTORY ch
LEFT JOIN
    ANOMALY_DATA a
    ON ch.REGION = a.REGION
    AND ch.OCI_COMPARTMENTNAME = a.OCI_COMPARTMENTNAME
    AND ch.CHARGEDESCRIPTION = a.CHARGEDESCRIPTION
    AND ch.RESOURCEID = a.RESOURCEID
GROUP BY
    ch.REGION,
    ch.OCI_COMPARTMENTNAME,
    ch.CHARGEDESCRIPTION,
    ch.RESOURCEID,
    a.MAX_ANOMALY_SCORE
ORDER BY
    MAX_ANOMALY_SCORE DESC, COST_MONTH_CURRENT DESC;
 ------------------------------------------
 
 CREATE OR REPLACE VIEW TOP_25_EXPENSIVE_SERVICES_V AS
WITH COST_DATA_LAST_6_MONTHS AS (
    SELECT
        CHARGEDESCRIPTION,
        TO_CHAR(ChargePeriodStart, 'YYYY-MM') AS USAGE_MONTH,
        SUM(EffectiveCost) AS TOTAL_COST
    FROM
        OCI_COST_DATA
    WHERE
        ChargePeriodStart >= ADD_MONTHS(TRUNC(SYSDATE), -6)
    GROUP BY
        CHARGEDESCRIPTION,
        TO_CHAR(ChargePeriodStart, 'YYYY-MM')
),
TOP_SERVICES AS (
    SELECT
        USAGE_MONTH,
        CHARGEDESCRIPTION,
        TOTAL_COST,
        RANK() OVER (PARTITION BY USAGE_MONTH ORDER BY TOTAL_COST DESC) AS COST_RANK
    FROM
        COST_DATA_LAST_6_MONTHS
)
SELECT
    CHARGEDESCRIPTION,
    NVL(MAX(CASE WHEN USAGE_MONTH = '2024-12' THEN TOTAL_COST END), 0) AS COST_2024_12,
    NVL(MAX(CASE WHEN USAGE_MONTH = '2025-01' THEN TOTAL_COST END), 0) AS COST_2025_01,
    NVL(MAX(CASE WHEN USAGE_MONTH = '2025-02' THEN TOTAL_COST END), 0) AS COST_2025_02,
    NVL(MAX(CASE WHEN USAGE_MONTH = '2025-03' THEN TOTAL_COST END), 0) AS COST_2025_03,
    NVL(MAX(CASE WHEN USAGE_MONTH = '2025-04' THEN TOTAL_COST END), 0) AS COST_2025_04,
    NVL(MAX(CASE WHEN USAGE_MONTH = '2025-05' THEN TOTAL_COST END), 0) AS COST_2025_05
FROM
    TOP_SERVICES
WHERE
    COST_RANK <= 25
GROUP BY
    CHARGEDESCRIPTION;
